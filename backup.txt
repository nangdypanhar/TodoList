import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  List<dynamic>? tasks;
  bool isLoading = true;
  String errorMessage = '';

  @override
  void initState() {
    super.initState();
    fetchData();
  }

  Future<void> fetchData() async {
    final url = Uri.parse("http://10.0.2.2:3000/lists"); // Adjust URL as needed

    try {
      final response = await http.get(url);
      print('Response status: ${response.statusCode}');
      print('Response body: ${response.body}');

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body) as List;
        setState(() {
          tasks = data;
          isLoading = false;
        });
      } else {
        setState(() {
          errorMessage = 'Failed to fetch data: ${response.statusCode}';
          isLoading = false;
        });
      }
    } catch (e) {
      print("Error: $e");
      setState(() {
        errorMessage = 'Error: $e';
        isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Fetch Tasks"),
      ),
      body: Center(
        child: isLoading
            ? CircularProgressIndicator() // Show a loading indicator while data is being fetched
            : errorMessage.isNotEmpty
                ? Text(errorMessage, style: TextStyle(color: Colors.red))
                : ListView.builder(
                    itemCount: tasks?.length ?? 0,
                    itemBuilder: (context, index) {
                      final task = tasks![index];
                      return ListTile(
                        title: Text(task['task']),
                        subtitle: Text(
                            "Created At: ${task['created_at']}\nUpdated At: ${task['updated_at']}"),
                      );
                    },
                  ),
      ),
    );
  }
}
